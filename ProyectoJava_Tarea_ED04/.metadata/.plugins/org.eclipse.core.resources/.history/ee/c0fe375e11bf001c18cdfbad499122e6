package cuentas;

/** 
 * @author adrian.arrcab
 * @version 0.0.1
 * Esta clase define los métodos que se utilizarán en el método operativa_cuenta() de la clase main.
 */

public class CCuenta {
	
	//Campos de la clase:
	
    private String nombre;
    private String cuenta;
    private double saldo;
    private double tipoInteres;
    
    public CCuenta()
    {
    }

	/**
	 * Constructor de la cuenta
	 * @param nom El parametro nom indica el nombre del propietario de la cuenta
	 * @param cue El parametro cue indica el número de cuenta
	 * @param sal El parametro sal indica el saldo de la cuenta
	 * @param tipo El parametro tipo indica el tipo de interés de la cuenta
	 */
    
    public CCuenta(String nom, String cue, double sal, double tipo)
    {
        setNombre(nom);
        setCuenta(cue);
        setSaldo(sal);
    } //Cierre del constructor

    /**
     * Método que devuelve el saldo de una cuenta
     * @return El saldo de la cuenta
     */
    
    public double estado()
    {
        return getSaldo();
    }
    
    /**
     * Método que ingresa una cantidad de dinero en la cuenta
     * @param cantidad La cantidad de dinero a ingresar en la cuenta
     * @throws Exception La acción a realizar cuando la cantidad da ingresar sea menor de 0 (Mensaje)
     */

    public void ingresar(double cantidad) throws Exception
    {
        if (cantidad<0)
            throw new Exception("No se puede ingresar una cantidad negativa");
        setSaldo(getSaldo() + cantidad);
    }

    /**
     * Método que retira una cantidad de dinero de una cuenta
     * @param cantidad La cantidad a retirar de la cuenta
     * @throws Exception La acción a realizar cuando la cantidad da ingresar sea menor de 0 (Mensaje) o la cantidad a retirar sea mayor que el saldo disponible (Mensaje)
     */
    
    public void retirar(double cantidad) throws Exception
    {
        if (cantidad <= 0)
            throw new Exception ("No se puede retirar una cantidad negativa");
        if (estado()< cantidad)
            throw new Exception ("No se hay suficiente saldo");
        setSaldo(getSaldo() - cantidad);
    }
    
    /**
     * Método que devuelve el nombre del propietario de la Cuenta
     * @return nombre El nombre del propietario de la cuenta
     */
    
	private String getNombre() {
		return nombre;
	}

	/**
	 * Método que introduce en un objeto de la clase CCuenta el Nombre del propietario de la cuenta
	 * @param nombre El nombre del propietario de la cuenta a introducir
	 */
	
	private void setNombre(String nombre) {
		this.nombre = nombre;
	}

    /**
     * Método que devuelve el número de Cuenta
     * @return cuenta El número de cuenta
     */	
	
	private String getCuenta() {
		return cuenta;
	}

	/**
	 * Método que introduce en un objeto de la clase CCuenta el número de cuenta
	 * @param cuenta El número de cuenta a introducir
	 */
	
	private void setCuenta(String cuenta) {
		this.cuenta = cuenta;
	}

    /**
     * Método que devuelve el saldo de la Cuenta
     * @return saldo El saldo de la cuenta
     */
	
	private double getSaldo() {
		return saldo;
	}

	/**
	 * Método que introduce en un objeto de la clase CCuenta el saldo disponible de la cuenta
	 * @param saldo El saldo disponible de la cuenta a introducir
	 */
	
	private void setSaldo(double saldo) {
		this.saldo = saldo;
	}

    /**
     * Método que devuelve el tipo de interés de la Cuenta
     * @return tipoInteres El tipo de interés de la cuenta
     */
	
	private double getTipoInteres() {
		return tipoInteres;
	}
	
	/**
	 * Método que introduce en un objeto de la clase CCuenta el tipo de Interés de la cuenta
	 * @param tipoInteres El tipo de interés de la cuenta a introducir
	 */

	private void setTipoInteres(double tipoInteres) {
		this.tipoInteres = tipoInteres;
	}
}
